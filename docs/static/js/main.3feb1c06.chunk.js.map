{"version":3,"sources":["firebase/index.js","firebase/config.js","components/SignInScreen.jsx","components/Create.jsx","components/Read.jsx","components/Record.jsx","components/Main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","GithubAuthProvider","PROVIDER_ID","SignInScreen","props","firebaseAuth","Create","compare","a","b","dateA","date","toUpperCase","dateB","comparison","useState","title","setTitle","started_at","setStarted_at","question01","setQuestion01","question02","setQuestion02","question03","setQuestion03","costs","setCosts","useReducer","state","newState","cost","costInput","setCostInput","handleChangeCost","event","name","target","value","user","uid","action","htmlFor","type","id","onChange","e","onClick","preventDefault","sort","console","log","firestore","collection","add","Date","created_at","FieldValue","serverTimestamp","user_id","then","result","window","location","href","map","x","index","key","filter","i","removeCost","Read","data","setData","useEffect","where","orderBy","onSnapshot","query","responseData","docs","total","Number","reduce","pre","now","duration","Math","ceil","seconds","to","Record","match","params","record","setRecord","doc","get","JSON","stringify","Main","logout","exact","path","render","component","App","loading","hoge","onAuthStateChanged","setState","signOut","this","Component","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6SAKeA,GAFYA,IAASC,cCHN,CAC5BC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CDFMR,EAAf,G,iBEDMS,EAAW,CACfC,WAAY,WACZC,iBAAkB,aAClBC,cAAe,CAIbZ,EAASa,KAAKC,mBAAmBC,cAgBtBC,EARM,SAACC,GACpB,OACE,6BACE,8CACA,kBAAC,IAAD,CAAoBR,SAAUA,EAAUS,aAAclB,EAASa,W,+BCwHtDM,EA5IA,SAAAF,GAGb,IAAMG,EAAU,SAACC,EAAGC,GAClB,IAAMC,EAAQF,EAAEG,KAAKC,cACfC,EAAQJ,EAAEE,KAAKC,cACjBE,EAAa,EAMjB,OALIJ,EAAQG,EACVC,EAAa,EACJJ,EAAQG,IACjBC,GAAc,IAEK,EAAdA,GAZa,EAgBIC,mBAAS,IAhBb,mBAgBfC,EAhBe,KAgBRC,EAhBQ,OAiBcF,mBAAS,IAjBvB,mBAiBfG,EAjBe,KAiBHC,EAjBG,OAkBcJ,mBAAS,IAlBvB,mBAkBfK,EAlBe,KAkBHC,EAlBG,OAmBcN,mBAAS,IAnBvB,mBAmBfO,EAnBe,KAmBHC,EAnBG,OAoBcR,mBAAS,IApBvB,mBAoBfS,EApBe,KAoBHC,EApBG,OAqBIV,mBAAS,IArBb,mBAqBfW,EArBe,KAqBRC,EArBQ,OAsBYC,sBAChC,SAACC,EAAOC,GAAR,sBACQD,EADR,GACkBC,KAClB,CACEC,KAAM,GACNpB,KAAM,KA3BY,mBAsBfqB,EAtBe,KAsBJC,EAtBI,KAgChBC,EAAmB,SAAAC,GACvB,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAC3BL,EAAa,eAAGG,EAAOE,KAoCzB,OACE,6BACE,mCAASlC,EAAMmC,KAAKC,KACpB,0BAAMC,OAAO,IACX,6BACE,2BAAOC,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOC,GAAG,QAAQR,KAAK,QAAQS,SAAU,SAAAC,GAAC,OAAI7B,EAAS6B,EAAET,OAAOC,WAE9E,6BACE,2BAAOI,QAAQ,cAAf,cACA,2BAAOC,KAAK,OAAOC,GAAG,aAAaR,KAAK,aAAaS,SAAU,SAAAC,GAAC,OAAI3B,EAAc2B,EAAET,OAAOC,WAG7F,6BACE,iCACA,2BAAOK,KAAK,QAAQC,GAAG,OAAOR,KAAK,aAAaE,MAAM,QAAQO,SAAU,SAAAC,GAAC,OAAIzB,EAAcyB,EAAET,OAAOC,UACpG,2BAAOI,QAAQ,QAAf,SACA,2BAAOC,KAAK,QAAQC,GAAG,OAAOR,KAAK,aAAaE,MAAM,MAAMO,SAAU,SAAAC,GAAC,OAAIzB,EAAcyB,EAAET,OAAOC,UAClG,2BAAOI,QAAQ,QAAf,OACA,2BAAOC,KAAK,QAAQC,GAAG,OAAOR,KAAK,aAAaE,MAAM,UAAUO,SAAU,SAAAC,GAAC,OAAIzB,EAAcyB,EAAET,OAAOC,UACtG,2BAAOI,QAAQ,QAAf,YAGF,6BACE,iCACA,2BAAOC,KAAK,QAAQC,GAAG,OAAOR,KAAK,aAAaE,MAAM,UAAUO,SAAU,SAAAC,GAAC,OAAIvB,EAAcuB,EAAET,OAAOC,UACtG,2BAAOI,QAAQ,QAAf,WACA,2BAAOC,KAAK,QAAQC,GAAG,OAAOR,KAAK,aAAaE,MAAM,UAAUO,SAAU,SAAAC,GAAC,OAAIvB,EAAcuB,EAAET,OAAOC,UACtG,2BAAOI,QAAQ,QAAf,WACA,2BAAOC,KAAK,QAAQC,GAAG,OAAOR,KAAK,aAAaE,MAAM,UAAUO,SAAU,SAAAC,GAAC,OAAIvB,EAAcuB,EAAET,OAAOC,UACtG,2BAAOI,QAAQ,QAAf,YAGF,6BACE,iCACA,2BAAOC,KAAK,QAAQC,GAAG,OAAOR,KAAK,aAAaE,MAAM,UAAUO,SAAU,SAAAC,GAAC,OAAIrB,EAAcqB,EAAET,OAAOC,UACtG,2BAAOI,QAAQ,QAAf,WACA,2BAAOC,KAAK,QAAQC,GAAG,OAAOR,KAAK,aAAaE,MAAM,QAAQO,SAAU,SAAAC,GAAC,OAAIrB,EAAcqB,EAAET,OAAOC,UACpG,2BAAOI,QAAQ,QAAf,SACA,2BAAOC,KAAK,QAAQC,GAAG,OAAOR,KAAK,aAAaE,MAAM,KAAKO,SAAU,SAAAC,GAAC,OAAIrB,EAAcqB,EAAET,OAAOC,UACjG,2BAAOI,QAAQ,QAAf,OAGF,6BACE,oCACA,2BAAOC,KAAK,SAASP,KAAK,OAAOE,MAAON,EAAUD,KAAMc,SAAUX,IAClE,2BAAOS,KAAK,OAAOP,KAAK,OAAOE,MAAON,EAAUrB,KAAMkC,SAAUX,IAChE,4BAAQS,KAAK,SAASI,QA/Ed,SAAAZ,GACdA,EAAMa,iBACNrB,EAAS,sBAAID,GAAJ,CAAWM,IAAWiB,KAAK1C,IACpC2C,QAAQC,IAAIzB,GACZO,EAAa,CAAEF,KAAM,GAAIpB,KAAM,OA2EzB,QAGF,6BACE,4BAAQgC,KAAK,SAASI,QAtEX,SAAAZ,GACjBe,QAAQC,IAAIzB,EAAON,EAAYE,EAAYE,GACzBrC,EAASiE,YACjBC,WAAW,SAASC,IAAI,CAChCtC,MAAOA,EACPE,WAAY,IAAIqC,KAAJ,UAAYrC,EAAZ,cACZE,WAAYA,EACZE,WAAYA,EACZE,WAAYA,EACZE,MAAOA,EAEP8B,WAAYrE,EAASiE,UAAUK,WAAWC,kBAC1CC,QAASvD,EAAMmC,KAAKC,MACnBoB,MAAK,SAAAC,GACNX,QAAQC,IAAIU,GACZC,OAAOC,SAASC,KAAhB,4BAA4CH,EAAOjB,SAuD/C,YAIJ,4BACGlB,EAAMuC,KAAI,SAACC,EAAGC,GACb,OACE,wBAAIC,IAAKD,GACP,2BAAG,0BAAMpB,QAAS,kBAnFX,SAAAoB,GACjBxC,EAAS,YAAID,GAAO2C,QAAO,SAACH,EAAGI,GAAJ,OAAUA,IAAMH,MAkFTI,CAAWJ,KAAhC,UAAiDD,EAAEvD,KAAtD,KAA8DuD,EAAEnC,aChF/DyC,EAjDF,SAAApE,GAAU,IAAD,EACIW,mBAAS,IADb,mBACb0D,EADa,KACPC,EADO,KA2BpB,OAzBAC,qBAAU,WACMxF,EAASiE,YAAYC,WAAW,SAK3CuB,MAAM,UAAW,KAAMxE,EAAMmC,KAAKC,KAClCqC,QAAQ,aAAc,QACtBC,YAAW,SAAAC,GACV,IAAMC,EAAe,YAAID,EAAME,MAAMhB,KAAI,SAAAC,GACvC,MAAO,CACLtB,GAAIsB,EAAEtB,GACN6B,KAAK,eACAP,EAAEO,OADH,CAEFS,MAAOhB,EAAEO,OAAO/C,MAAMuC,KAAI,SAAAC,GAAC,OAAIiB,OAAOjB,EAAEnC,SAAOqD,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,KAE1EC,SAAUC,KAAKC,MAAMvB,EAAEO,OAAOjB,WAAWkC,QAAUxB,EAAEO,OAAOvD,WAAWwE,SAAW,GAAK,GAAK,UAIlGhB,EAAQM,QAGX,CAAC5E,IAGF,6BACE,4BACGqE,EAAKR,KAAI,SAACC,EAAGC,GACZ,OACE,wBAAIC,IAAKD,EAAOvB,GAAIsB,EAAEtB,IACpB,qCAAWsB,EAAEO,KAAKzD,OAClB,gDAAmBkD,EAAEO,KAAKS,OAC1B,wCAAchB,EAAEO,KAAKc,UACrB,iDAAoBrB,EAAEO,KAAKS,MAAQhB,EAAEO,KAAKc,UAE1C,kBAAC,IAAD,CAAMI,GAAE,4BAAuBzB,EAAEtB,KAAjC,uBCFCgD,EArCA,SAAAxF,GAAU,IACfwC,EAAOxC,EAAMyF,MAAMC,OAAnBlD,GADc,EAGM7B,mBAAS,IAHf,mBAGfgF,EAHe,KAGPC,EAHO,KAwBtB,OAlBArB,qBAAU,WACOxF,EAASiE,YAAYC,WAAW,SAAS4C,IAAIrD,GAGzDsD,MACAtC,MAAK,SAAAqC,GACJ/C,QAAQC,IAAI8C,EAAIxB,QAChBuB,EAAU,eAEHC,EAAIxB,OAFF,CAGLS,MAAOe,EAAIxB,OAAO/C,MAAMuC,KAAI,SAAAC,GAAC,OAAIiB,OAAOjB,EAAEnC,SAAOqD,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,KAC5EC,SAAUC,KAAKC,MAAMQ,EAAIxB,OAAOjB,WAAWkC,QAAUO,EAAIxB,OAAOvD,WAAWwE,SAAW,GAAK,GAAK,YAKvG,CAAC9C,IAGF,6BACE,0CAAgBA,GAEhB,iDAAQmD,EAAO/E,OACf,iDAAQ+E,EAAOR,UACf,iDAAQQ,EAAOb,OAEf,kDAASa,EAAOrE,OAASqE,EAAOrE,MAAMuC,KAAI,SAACC,EAAGC,GAAJ,OAAc,wBAAIC,IAAKD,GAAQgC,KAAKC,UAAUlC,UCR/EmC,EArBF,SAAAjG,GACX,IAAMqE,EAAOrE,EAEb,OADA8C,QAAQC,IAAIsB,GAEV,6BACE,kBAAC,IAAD,KACE,4BACE,4BAAI,4BAAQ1B,QAAS,kBAAM3C,EAAMkG,WAA7B,mCACJ,4BAAI,kBAAC,IAAD,CAAMX,GAAG,cAAT,mCACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,gBAAT,gDAEN,6BACE,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,aAAaC,OAAQ,SAAArG,GAAK,OAAI,kBAAC,EAAD,CAAMmC,KAAMkC,EAAKlC,UACjE,kBAAC,IAAD,CAAOiE,KAAK,eAAeC,OAAQ,SAAArG,GAAK,OAAI,kBAAC,EAAD,CAAQmC,KAAMkC,EAAKlC,UAC/D,kBAAC,IAAD,CAAOiE,KAAK,wBAAwBE,UAAWd,QCmC1Ce,E,2MA9Cb9E,MAAQ,CACN+E,SAAS,EACTrE,KAAM,M,EAkBRsE,KAAO,O,mFAfc,IAAD,OAClB1H,EAASa,OAAO8G,oBAAmB,SAAAvE,GACjCW,QAAQC,IAAIZ,GACZ,EAAKwE,SAAS,CACZH,SAAS,EACTrE,KAAMA,S,+BAMVpD,EAASa,OAAOgH,UAChBlD,OAAOC,SAASC,KAAO,M,+BAKf,IAAD,OACP,OAAIiD,KAAKpF,MAAM+E,QAAgB,wCAU7B,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,IAAIE,UAAWvG,IACjC,kBAAC,IAAD,CAAOqG,KAAK,QAAQC,OAAQ,SAAArG,GAAK,OAAI,kBAAC,EAAD,CAAMmC,KAAM,EAAKV,MAAMU,KAAM+D,OAAQ,kBAAM,EAAKA,qB,GArC7EY,aCIEC,QACW,cAA7BrD,OAAOC,SAASqD,UAEe,UAA7BtD,OAAOC,SAASqD,UAEhBtD,OAAOC,SAASqD,SAASvB,MACvB,2DCZNwB,IAASZ,OAAO,kBAAC,EAAD,MAASa,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9D,MAAK,SAAA+D,GACjCA,EAAaC,kB","file":"static/js/main.3feb1c06.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport { firebaseConfig } from './config';\n\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\n\nexport default firebase;","export const firebaseConfig = {\n  apiKey: \"AIzaSyAM-0NzAy_XqpmCiAtG4IpUTr8FY8B8PqQ\",\n  authDomain: \"react-firebase-1d565.firebaseapp.com\",\n  databaseURL: \"https://react-firebase-1d565.firebaseio.com\",\n  projectId: \"react-firebase-1d565\",\n  storageBucket: \"react-firebase-1d565.appspot.com\",\n  messagingSenderId: \"976102549814\",\n  appId: \"1:976102549814:web:163d88340db3c161d02b97\"\n};\n","import React from 'react';\nimport firebase from '../firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nconst uiConfig = {\n  signInFlow: 'redirect',\n  signInSuccessUrl: \"/main/read\",\n  signInOptions: [\n    // firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    // firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.GithubAuthProvider.PROVIDER_ID,\n    // firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    // firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n    // firebase.auth.AnonymousAuthProvider.PROVIDER_ID\n  ],\n}\n\n\nconst SignInScreen = (props) => {\n  return (\n    <div>\n      <p>Please sign-in:</p>\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n    </div>\n  );\n}\nexport default SignInScreen;\n","import React, { useState, useReducer } from 'react';\nimport firebase from '../firebase';\n\nconst Create = props => {\n\n  // 日付ソート用の関数\n  const compare = (a, b) => {\n    const dateA = a.date.toUpperCase();\n    const dateB = b.date.toUpperCase();\n    let comparison = 0;\n    if (dateA > dateB) {\n      comparison = 1;\n    } else if (dateA < dateB) {\n      comparison = -1;\n    }\n    return comparison * -1;\n  }\n\n  // ステート管理\n  const [title, setTitle] = useState('');\n  const [started_at, setStarted_at] = useState('');\n  const [question01, setQuestion01] = useState('');\n  const [question02, setQuestion02] = useState('');\n  const [question03, setQuestion03] = useState('');\n  const [costs, setCosts] = useState([]);\n  const [costInput, setCostInput] = useReducer(\n    (state, newState) =>\n      ({ ...state, ...newState }),\n    {\n      cost: '',\n      date: '',\n    }\n  );\n\n  // コスト入力値の管理\n  const handleChangeCost = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setCostInput({ [name]: value });\n  }\n\n  // コスト追加処理\n  const addCost = event => {\n    event.preventDefault();\n    setCosts([...costs, costInput].sort(compare))\n    console.log(costs);\n    setCostInput({ cost: '', date: '' });\n  }\n\n  // コスト削除処理\n  const removeCost = index => {\n    setCosts([...costs].filter((x, i) => i !== index));\n  }\n\n  // データ送信処理\n  const submitData = event => {\n    console.log(costs, question01, question02, question03);\n    const firestore = firebase.firestore();\n    firestore.collection('posts').add({\n      title: title,\n      started_at: new Date(`${started_at}T00:00:00`),\n      question01: question01,\n      question02: question02,\n      question03: question03,\n      costs: costs,\n      // created_at: new Date(),\n      created_at: firebase.firestore.FieldValue.serverTimestamp(),\n      user_id: props.user.uid,\n    }).then(result => {\n      console.log(result)\n      window.location.href = `/main/read/record/${result.id}`;\n    });\n  }\n\n  return (\n    <div>\n      <p>uid: {props.user.uid}</p>\n      <form action=\"\">\n        <div>\n          <label htmlFor=\"title\">title</label>\n          <input type=\"text\" id=\"title\" name=\"title\" onChange={e => setTitle(e.target.value)} />\n        </div>\n        <div>\n          <label htmlFor=\"started_at\">started_at</label>\n          <input type=\"date\" id=\"started_at\" name=\"started_at\" onChange={e => setStarted_at(e.target.value)} />\n        </div>\n\n        <div>\n          <p>Q1</p>\n          <input type=\"radio\" id=\"q1_1\" name=\"question01\" value=\"React\" onChange={e => setQuestion01(e.target.value)} />\n          <label htmlFor=\"q1_1\">React</label>\n          <input type=\"radio\" id=\"q1_2\" name=\"question01\" value=\"Vue\" onChange={e => setQuestion01(e.target.value)} />\n          <label htmlFor=\"q1_2\">Vue</label>\n          <input type=\"radio\" id=\"q1_3\" name=\"question01\" value=\"Anguler\" onChange={e => setQuestion01(e.target.value)} />\n          <label htmlFor=\"q1_3\">Anguler</label>\n        </div>\n\n        <div>\n          <p>Q2</p>\n          <input type=\"radio\" id=\"q2_1\" name=\"question02\" value=\"Laravel\" onChange={e => setQuestion02(e.target.value)} />\n          <label htmlFor=\"q2_1\">Laravel</label>\n          <input type=\"radio\" id=\"q2_2\" name=\"question02\" value=\"CakePHP\" onChange={e => setQuestion02(e.target.value)} />\n          <label htmlFor=\"q2_2\">CakePHP</label>\n          <input type=\"radio\" id=\"q2_3\" name=\"question02\" value=\"Symfony\" onChange={e => setQuestion02(e.target.value)} />\n          <label htmlFor=\"q2_3\">Symfony</label>\n        </div>\n\n        <div>\n          <p>Q3</p>\n          <input type=\"radio\" id=\"q3_1\" name=\"question03\" value=\"Haskell\" onChange={e => setQuestion03(e.target.value)} />\n          <label htmlFor=\"q3_1\">Haskell</label>\n          <input type=\"radio\" id=\"q3_2\" name=\"question03\" value=\"Scala\" onChange={e => setQuestion03(e.target.value)} />\n          <label htmlFor=\"q3_2\">Scala</label>\n          <input type=\"radio\" id=\"q3_3\" name=\"question03\" value=\"F#\" onChange={e => setQuestion03(e.target.value)} />\n          <label htmlFor=\"q3_3\">F#</label>\n        </div>\n\n        <div>\n          <p>Costs</p>\n          <input type=\"number\" name=\"cost\" value={costInput.cost} onChange={handleChangeCost} />\n          <input type=\"date\" name=\"date\" value={costInput.date} onChange={handleChangeCost} />\n          <button type='button' onClick={addCost}>add</button>\n        </div>\n\n        <div>\n          <button type='button' onClick={submitData}>submit</button>\n        </div>\n      </form>\n\n      <ul>\n        {costs.map((x, index) => {\n          return (\n            <li key={index}>\n              <p><span onClick={() => removeCost(index)}>☓</span>{x.date}, {x.cost}</p>\n            </li>\n          );\n        })}\n      </ul>\n\n    </div>\n  )\n}\n\nexport default Create;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport firebase from '../firebase';\n\nconst Read = props => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const posts = firebase.firestore().collection('posts')\n    // const toDay = new Date();\n\n    // 更新イベント監視\n    posts\n      .where('user_id', '==', props.user.uid)\n      .orderBy('started_at', 'desc')\n      .onSnapshot(query => {\n        const responseData = [...query.docs].map(x => {\n          return {\n            id: x.id,\n            data: {\n              ...x.data(),\n              total: x.data().costs.map(x => Number(x.cost)).reduce((pre, now) => pre + now),\n              // duration: Math.ceil(((toDay.getTime() / 1000) - x.data().started_at.seconds) / 60 / 60 / 24),\n              duration: Math.ceil((x.data().created_at.seconds - x.data().started_at.seconds) / 60 / 60 / 24),\n            },\n          }\n        });\n        setData(responseData);\n      })\n    // useEffectの外から持ってきた値は↓のように初期化する必がある\n  }, [props])\n\n  return (\n    <div>\n      <ul>\n        {data.map((x, index) => {\n          return (\n            <li key={index} id={x.id}>\n              <p>title: {x.data.title}</p>\n              <p>totalCost (¥): {x.data.total}</p>\n              <p>duration: {x.data.duration}</p>\n              <p>cost / day (¥): {x.data.total / x.data.duration}</p>\n              {/* <p><span onClick={() => { }}>☓</span>{JSON.stringify(x.data)}</p> */}\n              <Link to={`/main/read/record/${x.id}`}>詳細</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n    </div>\n  )\n\n}\n\nexport default Read;","import React, { useState, useEffect } from 'react';\nimport firebase from '../firebase';\n\nconst Record = props => {\n  const { id } = props.match.params;\n\n  const [record, setRecord] = useState([]);\n  // const [totalCost, setTotalCost] = useState('');\n\n  useEffect(() => {\n    const record = firebase.firestore().collection('posts').doc(id);\n    // 更新イベント監視\n    record\n      .get()\n      .then(doc => {\n        console.log(doc.data());\n        setRecord(\n          {\n            ...doc.data(),\n            total: doc.data().costs.map(x => Number(x.cost)).reduce((pre, now) => pre + now),\n            duration: Math.ceil((doc.data().created_at.seconds - doc.data().started_at.seconds) / 60 / 60 / 24),\n          }\n        )\n        // setRecord(doc.data().costs.map(x => Number(x.cost)).reduce((pre, now) => pre + now));\n      })\n  }, [id])\n\n  return (\n    <div>\n      <p>documentId: {id}</p>\n      {/* <p>{JSON.stringify(record)}</p> */}\n      <p>相手： {record.title}</p>\n      <p>期間： {record.duration}</p>\n      <p>総額： {record.total}</p>\n      {/* <ul>詳細： {JSON.stringify(record.costs)}</ul> */}\n      <ul>詳細： {record.costs && record.costs.map((x, index) => <li key={index}>{JSON.stringify(x)}</li>)}</ul>\n    </div>\n  )\n}\n\nexport default Record;","import React from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport Create from './Create';\nimport Read from './Read';\nimport Record from './Record';\n\nconst Main = props => {\n  const data = props\n  console.log(data);\n  return (\n    <div>\n      <BrowserRouter>\n        <ul>\n          <li><button onClick={() => props.logout()}>ログアウト</button></li>\n          <li><Link to='/main/read'>一覧を見る</Link></li>\n          <li><Link to='/main/create'>データをつくる</Link></li>\n        </ul>\n        <div>\n          <Route exact path='/main/read' render={props => <Read user={data.user} />} />\n          <Route path='/main/create' render={props => <Create user={data.user} />} />\n          <Route path='/main/read/record/:id' component={Record} />\n        </div>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport firebase from './firebase';\nimport SignInScreen from './components/SignInScreen';\nimport Main from './components/Main';\n// import Create from './components/Create';\n// import Read from './components/Read';\n\nclass App extends Component {\n  state = {\n    loading: true,\n    user: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      console.log(user);\n      this.setState({\n        loading: false,\n        user: user\n      });\n    });\n  }\n\n  logout() {\n    firebase.auth().signOut();\n    window.location.href = '/';\n  }\n\n  hoge = 'fuga';\n\n  render() {\n    if (this.state.loading) return <div>loading</div>;\n    return (\n      // <div>\n      //   Username: {this.state.user && this.state.user.displayName}\n      //   <br />\n      //   {this.state.user ?\n      //     (<button onClick={this.logout}>Logout</button>) :\n      //     (<SignInScreen />)\n      //   }\n      // </div>\n      <BrowserRouter>\n        <div>\n          <Route exact path='/' component={SignInScreen} />\n          <Route path='/main' render={props => <Main user={this.state.user} logout={() => this.logout()} />} />\n          {/* <Route path='/create' render={props => <Create user={this.state.user} />} />\n          <Route path='/read' render={props => <Read user={this.state.user} />} /> */}\n          {/* <Route path='/friends' component={Friends} /> */}\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}